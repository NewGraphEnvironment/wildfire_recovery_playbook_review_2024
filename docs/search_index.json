[["index.html", "Wildfire Recovery Playbook Review - 2024 Acknowledgement", " Wildfire Recovery Playbook Review - 2024 Prepared for Pacific Salmon Foundation Prepared by Al Irvine, B.Sc., R.P.Bio. New Graph Environment Ltd. on behalf of Society for Ecosytem Restoration in Northern British Columbia Version 0.0.1 2024-03-11 Acknowledgement Modern civilization has a long journey ahead to acknowledge and address the historic and ongoing impacts of colonialism that have resulted in harm to the cultures and livelihoods living interconnected with our ecosystems for many thousands of years. "],["introduction.html", "Introduction", " Introduction Thank you for the opportunity to review the Playbook to Guide Landscape Recovery Strategies &amp; Priorities for Salmon Habitat Following Major Wildfires (EDI Environmental Dynamics Inc. 2023). We are very impressed with the work that has been done! "],["praise.html", "Praise", " Praise The playbook is well organized, well written and easy to follow. It must have taken forever to write and all the contributors should be showered in praise for their efforts and should be super proud of the final product. The playbook is comprehensive and covers most the necessary topics. The content is well researched and we are confident the information we are familiar with is accurate. The playbook is a valuable resource for anyone involved in wildfire recovery with the links to external resources are particularly helpful. "],["a-few-thoughts.html", "A Few Thoughts Reproducability Software Tools for Reproducability Open Source - Iterative Reporting", " A Few Thoughts Reproducability There does not seem to be a lot of information regarding the value of reproducability for restoration planning and from our perspective that is a major opportunity for progress… For example - the use of scripts to automate workflows and the sharing of workflows online. From our perspective, there is extraordinary value in using scripts and packages to automate workflows and promote collaboration. Rather than each professional doing their own analysis on their own custom datasets with many ad-hoc workflows it should be encouraged that professionals move towards well documented - reproducible open-source programming workflows using scripting languages like R, sql and python. Examples of the types of packages that can be used to automate workflows are presented here. Software Tools for Reproducability Although many of the resources in the above linked csv are reports (containing scripted workflows) there are also many stand-alone software tools. An example of a tool key for reproducible workflows is bcdata [norris2024smnorrisbcdata] which is a package that allows the user to access data from the BC Data Catalogue. This package can be used to build a mirror of government data that is used in projects. Because the loading of data to a postgres database is done automatically and the names of the data schemas and tables are equivalent to those served out by the province - GIS analysis is portable and analysis can be rerun with fresh data over time. This facilitates collaboration and reproducability on a level that is not achievable without much more effort and skill than is required when not using a tool such as this. Other key tools include fwapg [norris2024smnorrisfwapg] and bcfishpass [norris2024smnorrisbcfishpass] among others. There are many wonderful conceptual workflows presented in the Wildfire Restoration Playbook and some text that indicates that investments should be made so these workflows can be automated and shared openly to the greatest extent possible would be a great addition to the document. A great example of a conceptual workflow that could be automated (with the help of packages like bcdata!) is Presented in Figure 24 - “Conceptualization of combining spatial data (GIS) on hazards and consequences to visualize wildfire risk on a single 2-dimensional wildfire “risk map”. Adapted from Alwathaf and Mansouri (2011).” Open Source - Iterative Reporting There is a key question we have been asking ourselves lately and that is “What is the most useful way to present information?” From our perspective - the most useful way to present information is in a version controlled format that allows it to be interactive, reproducible, read online, served out as a static document, updated, copied, used as a template, etc. Iterative reporting, managed with a version control system such as git with a permissive license is a great way to do all those things. Although there is a steep learning curve to using programming tools and producing this type of product and although it can be quite time consuming - it then allows leveraging of all the components of the work to future projects for everyone. Licenseing is also key and should be considered. Here is an example of a license that promotes collaboration and sharing/leveraging of work. From our perspective - the playbook is the type of document that is well suited to an iterative reporting format such as can be demonstrated within this code repository which builds and serves this online report. We would like to suggest that in future iterations, it be considered that the playbook is converted to a dynamic document because: Tables and Figures There are an incredible number of tables within the document that may have taken a very long time to format. We suggest the tables be converted to simple csvs or pages of an excel workbook and pulled into the project using scripts. This would allow others to access the data and use it in their own projects. The tables could also then be easily updated with new data as it becomes available and the formatting would be handled by the scripting. An example of this can be seen here in Table 1 with the actual file served here: read_csv(&quot;data/aquatic_restoration_resources.csv&quot;) %&gt;% fpr::fpr_kable() Table 1: Table 2: Resource URL Details bcfishpass https://github.com/smnorris/bcfishpass Build and maintain an aquatic connectivity / fish passage database for British Columbia to track known barriers to fish passage, model potential barriers to fish passage, model passability/accessibility of streams based on species swimming ability, model streams with potential for spawning and rearing activity, etc fpr https://github.com/NewGraphEnvironment/fpr Fish Passage Reporting functions for British Columbia. R package used for cleaning, transforming and extracting data to build interactive reports related to fish passage planning including fish passage assessments and habitat confirmation assessments at road-stream crossings. In dff-2022 https://github.com/NewGraphEnvironment/dff-2022 Building digital field forms for field work in British Columbia, mobile QGIS projects and processing data collected using standardized provincial data layer and data collection templates. Utilizes open source software including R, python, bash and QGIS and others. rfp https://github.com/NewGraphEnvironment/rfp Reproducible Field Projects for British Columbia. R package to standardize and track the creation of collaborative GIS projects for aquatic restoration/conservation planning and field work. Under development incorporating many dff-2022 scripts into R package functions. Restoration Framework https://github.com/NewGraphEnvironment/restoration_framework Public repository for development of and linking to restoration / conservation planning tools and concepts. Restoring Fish Passage in the Peace Region 2023 https://newgraphenvironment.github.io/fish_passage_peace_2023_reporting/ REPORT NOT YET LIVE (20240220). Interactive reporting for 2023 fish passage restoration planning activities in the Parsnip, Carp and Crooked Watershed Groups north of Prince George in the Peace Region. Designs completed for two crossings in the Table River watershed (Parsnip River watershed group) and materials purchased for remediation. Phase 1 and Phase 2 assessments in Carp and Crooked watershed groups. Fish sampling with PIT tagging conducted in Parsnip River watershed group. Aerial imagery collected by drone. Repository located at https://github.com/NewGraphEnvironment/fish_passage_peace_2023_reporting Restoring Fish Passage in the Peace Region 2022 https://newgraphenvironment.github.io/fish_passage_peace_2022_reporting/ Interactive reporting for 2022 fish passage restoration planning activities in the Parsnip, Carp and Crooked Watershed Groups north of Prince George in the Peace Region. Includes interactive planning dashboard. Crossing in Missinka watershed replaced and design done for site on Chuchinka-Arctic FSR. Fish sampling with PIT tagging conducted. Aerial imagery collected by drone. Restoring Fish Passage in the Peace Region 2021 https://newgraphenvironment.github.io/fish_passage_parsnip_2021_reporting/ Interactive reporting for 2021 fish passage restoration planning activities in the Parsnip Watershed Group north of Prince George in the Peace Region. Includes interactive planning dashboard and . Parsnip_Fish_Passage https://newgraphenvironment.github.io/Parsnip_Fish_Passage/ Interactive reporting for 2019 fish confirmation assessments in the Parsnip Watershed Group north of Prince George in the Peace Region. Fish sampling conducted. Aerial imagery collected by drone. Skeena Fish Passage Restoration Planning 2023 https://newgraphenvironment.github.io/fish_passage_skeena_2023_reporting REPORT NOT YET LIVE (20240220). Interactive reporting for Fish passage and habitat confirmation assessments in the Bulkey River, Morice River, Zymoetz River and Kispiox River watershed groups. Fish sampling conducted. Repository located at https://github.com/NewGraphEnvironment/fish_passage_skeena_2023_reporting Skeena Fish Passage Restoration Planning 2022 https://newgraphenvironment.github.io/fish_passage_skeena_2022_reporting Interactive reporting for Fish passage and habitat confirmation assessments in the Morice River, Zymoetz River and Kispiox River watershed groups. Fish sampling conducted. Bulkley River Watershed Group Fish Passage Restoration Planning 2022 https://newgraphenvironment.github.io/fish_passage_bulkley_2022_reporting/ Interactive reporting for fish passage assessments and habitat confirmation assessments at sites in the Bulkley River watershed group. Fish sampling with PIT tagging conducted. Bulkley River and Morice River Watershed Groups Fish Passage Restoration Planning 2021 https://newgraphenvironment.github.io/fish_passage_skeena_2021_reporting/ Interactive reporting for Fish passage assessments and habitat confirmation assessments in the Bulkley River and Morice River watershed groups. Fish sampling conducted. Bulkley River and Morice River Watershed Groups Fish Passage Restoration Planning 2020 https://newgraphenvironment.github.io/fish_passage_bulkley_2020_reporting/ Interactive reporting for fish passage assessments and habitat confirmation assessments in the Bulkley River and Morice River watershed groups. Fish sampling conducted. Elk River Watershed Group Fish Passage Restoration Planning 2022 https://newgraphenvironment.github.io/fish_passage_elk_2022_reporting/ Interactive reporting for fish passage assessments and habitat confirmation assessments in the Elk River watershed group. Fish sampling, fish habitat assessment procedures, temperature monitoring and stream discharge measurements were conducted. Elk River Watershed Group Fish Passage Restoration Planning 2021 https://newgraphenvironment.github.io/fish_passage_elk_2021_reporting/ Interactive reporting for fish passage assessments and habitat confirmation assessments in the Elk River watershed group. Fish sampling, fish habitat assessment procedures and temperature monitoring were conducted. Elk River Watershed Group Fish Passage Restoration Planning 2020 https://newgraphenvironment.github.io/fish_passage_elk_2020_reporting/ Interactive reporting for fish passage assessments and habitat confirmation assessments in the Elk River watershed group. Fish sampling conducted. Fraser Fish Passage Restoration Planning 2023 https://newgraphenvironment.github.io/fish_passage_fraser_2023_reporting/ REPORT NOT YET LIVE (20240220). Interactive reporting for fish passage assessments in the Nechacko River, Lower Chilako River, Francois Lake, Upper Fraser River and Mork River watershed groups. Repository at https://github.com/NewGraphEnvironment/fish_passage_fraser_2023_reporting Richfield Creek Riparian Restoration 2022 https://github.com/NewGraphEnvironment/fish_passage_bulkley_2022_reporting/raw/main/docs/SERN_Richfield_Fencing_2022_Final%20Report.pdf Leveraging other investments in the watershed by Morice Watershed Monitoring Trust (streambank stabilization and riparian planting at four locations) and A Rocha Canada, we supported installation of 840m of cattle exclusion fence on previously unfenced areas of rangeland adjacent to high fisheries values in Richfield Creek. Installation of live cuttings in four distinct polygons covering 866m2 of riparian area. Use of drone to gather Lidar and temperature data to help inform future process-based restoration actions in the Upper Bulkley Watershed. Richfield Creek Riparian Fencing 2021 https://github.com/NewGraphEnvironment/fish_passage_skeena_2021_reporting/raw/master/docs/Attachment_4.pdf Leveraging other investments in the watershed by Morice Watershed Monitoring Trust (streambank stabilization and riparian planting at four locations) we supported the installation of 1100 m of fencing on the west of Richfield Creek in in the Upper Bulkley Watershed. fish-passage-22 https://github.com/poissonconsulting/fish-passage-22 Mapping stream discharge and temperature causal effects pathways to focus aquatic restoration actions in areas of highest potential for positive impacts on fisheries values. Includes scripts to download real-time hydrometric flow and temperature data as well as Pacific Climate Impact Consortium hydrometric data (modelled historic and projected) fissr-explore https://github.com/NewGraphEnvironment/fissr_explore Exploratory analysis of provincial fish sampling dataset to explore utility for building evidence based approach to the parameters used to model the best habitat for individual fish species to help make decisions around where to invest in aquatic restoration activities fissr-explore-21 https://www.poissonconsulting.ca/f/1386346791 Analysis of relationships between rainbow trout density (from province wide electrofishing dataset) , channel width and gradient channel-width-21b https://www.poissonconsulting.ca/f/859859031 Modelled estimate of channel width based on watershed area and mean annual precipitation. Used to help estimate rearing and spawning suitability of streams for fish use by numerous species in . bcdata https://github.com/smnorris/bcdata Simplifies downloads of BC geographic data () and DEMs. Integrates with postgres databases using schema and table names identical to those of the province. Allows real-time updates of datasets and collaborative sharing of scripts/workflows. fwapg https://github.com/smnorris/fwapg Extends British Columbia’s Freshwater Atlas (FWA) with PostgreSQL/PostGIS to enable speedy upstream/downstream queries throughout BC, quickly and cleanly generate watershed boundaries upstream of arbitrary locations, enable quickly serving FWA features as vector tiles, etc. bcfishobs https://github.com/smnorris/bcfishobs Locate up to date fish observation points as linear referencing events on the Freshwater Atlas. bcbrat https://github.com/smnorris/bcbrat Experimental tool for generating BRAT project data for British Columbia watersheds. roadintegrator https://github.com/smnorris/roadintegrator Merge multiple BC road datasets into a single layer for Cumulative Effects analysis designatedlands https://github.com/smnorris/designatedlands Combine spatial data for 40+ designations that contribute to land management to create a single ‘Designated Lands’ layer for British Columbia Fish Passage Maps https://hillcrestgeo.ca/outgoing/fishpassage/projects/ Georeferenced maps for all Skeena watershed groups, Elk River as well as the Parsnip River, Crooked, and Carp River watershed groups in the Peace Region. Can be imported to phone or table for navigation real-time in Avenza Maps. Mergin Maps https://github.com/MerginMaps Geodata platform for hosting shared QGIS projects on the cloud and collecting field data through forms on phones and tablets. Open source software with paid plans to simplify setup and maintenance. Command line tools to interact with projects including for syncing and permissions. Any figures used in the reporting could be saved in the project and used by anyone else in their work to tell there own story and help their teams achieve their goals. An example of this can be seen here Table 1 with the actual file served here. knitr::include_graphics(&quot;fig/collaboration.jpg&quot;) The references in the Wildfire Restoration Playbook are incredible. There are so many and they are extremely valuble. Thank you. To maximize the value of these references, they should be tabulated within a references section at the end of the report and documented in a .bib file that can be imported and exported to and from a reference manager such as Zotero or Mendeley. This would allow the references to be transferred all at once to others libraries so they can be used in other projects and updated as needed. An example of this can be seen here. The document is necessarily fairly lengthy longish and from some perspectives may be considered a touch difficult to navigate. It would be helpful to have the report served online with a table of contents on the left hand side that allows the reader to jump to each section. An example of this can be seen here. In this particular situation this is done useing the open source package bookdown and the document is served by github pages. Although it requires a bit of gymnastics to get it set up the document can also be served in a way that allows the reader to download updated pdf versions of the report that are formatted for printing and suitable for upload to a central database such as Ecocat. An example of this can be seen here where a download button at the top left of the document allows the user to download a pdf version of the report from this url. ### Collaborative GIS {-} Geographical Information Systems are essential for understanding restoration plans and the reasons they are required. Without the ability to visualize the landscape and the data that is used to make decisions it is difficult to communicate the need for restoration and the potential benefits. We suggest that the collaborative GIS environments be mentioned as a key tool for restoration planning. Although there are many tools for sharing spatial information we have been finding that Mergin Maps (source code here - which leverages the open source QGIS software - is a great tool for sharing spatial data, collaborating on spatial analysis and even collecting standardized data on our phones. Maybe worth a mention. "],["conclusion.html", "Conclusion", " Conclusion Let’s face it - its annoying putting out documents for review. Let’s get a bunch of flack for giving it our all. It’s great that you are doing it. Smart. Considerate. You have done an excellent job and we are very grateful for the opportunity to provide feedback. We hope it does not come across as too critical as overall we are very impressed with the work that has been done and look forward to mining the document for resources and ideas for our own projects. Thank you!!! 🤩 🧭 🍪 🌈 🌍 🌱 🌲 🌊 🌞 🌟 🍀 🍁 🍂 🍃 🍄 🍇 🍈 🍙 🍊 🍋 🍌 🍍 🍎 🍏 🍐 🍑 🍒 🍓 🍔 🍕 🍖 🍗 "],["references.html", "References", " References "],["session-info.html", "Session Info", " Session Info devtools::session_info() ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── setting value version R version 4.3.2 (2023-10-31) os &lt;NA&gt; system aarch64, darwin20 ui RStudio language (EN) collate en_US.UTF-8 ctype en_US.UTF-8 tz America/Vancouver date 2024-03-11 rstudio 2023.12.1+402 Ocean Storm (desktop) pandoc 3.1.1 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown) ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── package * version date (UTC) lib source bcdata 0.4.1 2023-03-18 [1] CRAN (R 4.3.0) bit 4.0.5 2022-11-15 [1] CRAN (R 4.3.0) bit64 4.0.5 2020-08-30 [1] CRAN (R 4.3.0) bookdown * 0.38 2024-03-04 [1] CRAN (R 4.3.1) bslib 0.6.1 2023-11-28 [1] CRAN (R 4.3.2) cachem 1.0.8 2023-05-01 [1] CRAN (R 4.3.0) cellranger 1.1.0 2016-07-27 [1] CRAN (R 4.3.0) chk 0.9.1.9000 2024-01-08 [1] Github (poissonconsulting/chk@7ebd4b3) class 7.3-22 2023-05-03 [2] CRAN (R 4.3.2) classInt 0.4-10 2023-09-05 [1] CRAN (R 4.3.0) cli 3.6.2 2023-12-11 [1] CRAN (R 4.3.1) colorspace 2.1-0 2023-01-23 [1] CRAN (R 4.3.0) crayon 1.5.2 2022-09-29 [1] CRAN (R 4.3.0) DBI 1.2.1 2024-01-12 [1] CRAN (R 4.3.2) dbplyr 2.4.0 2023-10-26 [1] CRAN (R 4.3.1) devtools 2.4.5 2022-10-11 [1] CRAN (R 4.3.0) digest 0.6.34 2024-01-11 [1] CRAN (R 4.3.1) dplyr * 1.1.4 2023-11-17 [1] CRAN (R 4.3.1) e1071 1.7-14 2023-12-06 [1] CRAN (R 4.3.1) ellipsis 0.3.2 2021-04-29 [1] CRAN (R 4.3.0) evaluate 0.23 2023-11-01 [1] CRAN (R 4.3.2) fansi 1.0.6 2023-12-08 [1] CRAN (R 4.3.1) fastmap 1.1.1 2023-02-24 [1] CRAN (R 4.3.0) forcats * 1.0.0 2023-01-29 [1] CRAN (R 4.3.0) fpr * 1.1.0 2024-03-06 [1] Github (newgraphenvironment/fpr@f3c021e) fs 1.6.3 2023-07-20 [1] CRAN (R 4.3.0) generics 0.1.3 2022-07-05 [1] CRAN (R 4.3.0) ggplot2 * 3.4.4 2023-10-12 [1] CRAN (R 4.3.1) glue 1.7.0 2024-01-09 [1] CRAN (R 4.3.1) gtable 0.3.4 2023-08-21 [1] CRAN (R 4.3.0) highr 0.10 2022-12-22 [1] CRAN (R 4.3.2) hms 1.1.3 2023-03-21 [1] CRAN (R 4.3.0) htmltools 0.5.7 2023-11-03 [1] CRAN (R 4.3.1) htmlwidgets 1.6.4 2023-12-06 [1] CRAN (R 4.3.1) httpuv 1.6.14 2024-01-26 [1] CRAN (R 4.3.1) janitor 2.2.0 2023-02-02 [1] CRAN (R 4.3.0) jquerylib 0.1.4 2021-04-26 [1] CRAN (R 4.3.2) jsonlite 1.8.8 2023-12-04 [1] CRAN (R 4.3.1) kableExtra 1.4.0 2024-01-24 [1] CRAN (R 4.3.1) KernSmooth 2.23-22 2023-07-10 [2] CRAN (R 4.3.2) knitr * 1.45 2023-10-30 [1] CRAN (R 4.3.2) later 1.3.2 2023-12-06 [1] CRAN (R 4.3.1) lifecycle 1.0.4 2023-11-07 [1] CRAN (R 4.3.2) lubridate * 1.9.3 2023-09-27 [1] CRAN (R 4.3.1) magrittr 2.0.3 2022-03-30 [1] CRAN (R 4.3.0) memoise 2.0.1 2021-11-26 [1] CRAN (R 4.3.2) mime 0.12 2021-09-28 [1] CRAN (R 4.3.0) miniUI 0.1.1.1 2018-05-18 [1] CRAN (R 4.3.0) munsell 0.5.0 2018-06-12 [1] CRAN (R 4.3.0) pagedown * 0.20 2022-12-13 [1] CRAN (R 4.3.0) pak 0.7.1 2023-12-11 [1] CRAN (R 4.3.1) pillar 1.9.0 2023-03-22 [1] CRAN (R 4.3.0) pkgbuild 1.4.3 2023-12-10 [1] CRAN (R 4.3.1) pkgconfig 2.0.3 2019-09-22 [1] CRAN (R 4.3.0) pkgload 1.3.4 2024-01-16 [1] CRAN (R 4.3.1) poisutils 0.0.0.9010 2024-01-08 [1] Github (poissonconsulting/poisutils@8310dc4) processx 3.8.3 2023-12-10 [1] CRAN (R 4.3.1) profvis 0.3.8 2023-05-02 [1] CRAN (R 4.3.0) promises 1.2.1 2023-08-10 [1] CRAN (R 4.3.0) proxy 0.4-27 2022-06-09 [1] CRAN (R 4.3.0) ps 1.7.6 2024-01-18 [1] CRAN (R 4.3.1) purrr * 1.0.2 2023-08-10 [1] CRAN (R 4.3.0) R6 2.5.1 2021-08-19 [1] CRAN (R 4.3.2) rappdirs 0.3.3 2021-01-31 [1] CRAN (R 4.3.0) Rcpp 1.0.12 2024-01-09 [1] CRAN (R 4.3.1) readr * 2.1.5 2024-01-10 [1] CRAN (R 4.3.1) readxl 1.4.3 2023-07-06 [1] CRAN (R 4.3.0) remotes 2.4.2.1 2023-07-18 [1] CRAN (R 4.3.0) rlang 1.1.3 2024-01-10 [1] CRAN (R 4.3.1) rmarkdown * 2.26 2024-03-05 [1] CRAN (R 4.3.1) roxygen2 7.3.1 2024-01-22 [1] CRAN (R 4.3.1) rstudioapi 0.15.0 2023-07-07 [1] CRAN (R 4.3.0) sass 0.4.8 2023-12-06 [1] CRAN (R 4.3.1) scales 1.3.0 2023-11-28 [1] CRAN (R 4.3.1) servr 0.28 2023-12-19 [1] CRAN (R 4.3.1) sessioninfo 1.2.2 2021-12-06 [1] CRAN (R 4.3.0) sf 1.0-15 2023-12-18 [1] CRAN (R 4.3.2) shiny 1.8.0 2023-11-17 [1] CRAN (R 4.3.1) shrtcts 0.1.2 2024-01-25 [1] Github (gadenbuie/shrtcts@41051cf) snakecase 0.11.1 2023-08-27 [1] CRAN (R 4.3.0) stringi 1.8.3 2023-12-11 [1] CRAN (R 4.3.1) stringr * 1.5.1 2023-11-14 [1] CRAN (R 4.3.2) svglite 2.1.3 2023-12-08 [1] CRAN (R 4.3.1) systemfonts 1.0.5 2023-10-09 [1] CRAN (R 4.3.1) tibble * 3.2.1 2023-03-20 [1] CRAN (R 4.3.0) tidyr * 1.3.0 2023-01-24 [1] CRAN (R 4.3.0) tidyselect 1.2.0 2022-10-10 [1] CRAN (R 4.3.0) tidyverse * 2.0.0 2023-02-22 [1] CRAN (R 4.3.0) timechange 0.3.0 2024-01-18 [1] CRAN (R 4.3.1) tzdb 0.4.0 2023-05-12 [1] CRAN (R 4.3.0) units 0.8-5 2023-11-28 [1] CRAN (R 4.3.1) urlchecker 1.0.1 2021-11-30 [1] CRAN (R 4.3.0) usethis 2.2.2 2023-07-06 [1] CRAN (R 4.3.0) utf8 1.2.4 2023-10-22 [1] CRAN (R 4.3.1) vctrs 0.6.5 2023-12-01 [1] CRAN (R 4.3.1) viridisLite 0.4.2 2023-05-02 [1] CRAN (R 4.3.0) vroom 1.6.5 2023-12-05 [1] CRAN (R 4.3.1) websocket 1.4.1 2021-08-18 [1] CRAN (R 4.3.0) withr 3.0.0 2024-01-16 [1] CRAN (R 4.3.1) xfun 0.41 2023-11-01 [1] CRAN (R 4.3.1) xml2 1.3.6 2023-12-04 [1] CRAN (R 4.3.1) xtable 1.8-4 2019-04-21 [1] CRAN (R 4.3.0) yaml 2.3.8 2023-12-11 [1] CRAN (R 4.3.1) yesno 0.1.2.9000 2024-01-11 [1] Github (poissonconsulting/yesno@2318599) [1] /Users/airvine/Library/R/arm64/4.3/library [2] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
